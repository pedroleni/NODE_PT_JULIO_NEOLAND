{
  "type": "excalidraw",
  "version": 2,
  "source": "https://excalidraw.com",
  "elements": [
    {
      "type": "text",
      "version": 313,
      "versionNonce": 1878603323,
      "isDeleted": false,
      "id": "WTL80ORkI1fkRKKTqLkcp",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 432.00006103515625,
      "y": 195.85714721679688,
      "strokeColor": "#5f3dc4",
      "backgroundColor": "transparent",
      "width": 725.5794067382812,
      "height": 125,
      "seed": 654187707,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1684262376563,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "Un backend donde haya usuarios ( administradores y normales) donde el \nadmin va a crear eventos y los usuarios normales se van a adherir.\n\nPor otro lado, el administrador les a puntuar a los personas que esten \nadheridas al evento. ",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "Un backend donde haya usuarios ( administradores y normales) donde el \nadmin va a crear eventos y los usuarios normales se van a adherir.\n\nPor otro lado, el administrador les a puntuar a los personas que esten \nadheridas al evento. ",
      "lineHeight": 1.25,
      "baseline": 117
    },
    {
      "type": "text",
      "version": 46,
      "versionNonce": 543908949,
      "isDeleted": false,
      "id": "A9Q04UnxYQf0BCkBGtG59",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 716.5714721679688,
      "y": 146.14285278320312,
      "strokeColor": "#5f3dc4",
      "backgroundColor": "transparent",
      "width": 107.0599365234375,
      "height": 25,
      "seed": 830453883,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1684262405161,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "OBJETIVO",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "OBJETIVO",
      "lineHeight": 1.25,
      "baseline": 17
    },
    {
      "type": "rectangle",
      "version": 31,
      "versionNonce": 1672279259,
      "isDeleted": false,
      "id": "iHRINjCRl8tAeKM2zGF0I",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 696.571533203125,
      "y": 134.1428680419922,
      "strokeColor": "#5f3dc4",
      "backgroundColor": "transparent",
      "width": 137.71429443359375,
      "height": 48.00001525878906,
      "seed": 2041280379,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1684262407444,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 41,
      "versionNonce": 1110864373,
      "isDeleted": false,
      "id": "E366EAJQ5s6b0AP_OcYtl",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 686,
      "y": 389,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "width": 205.97988891601562,
      "height": 25,
      "seed": 1846593813,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1684262425490,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "MODELO DE DATOS",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "MODELO DE DATOS",
      "lineHeight": 1.25,
      "baseline": 17
    },
    {
      "type": "rectangle",
      "version": 71,
      "versionNonce": 200544699,
      "isDeleted": false,
      "id": "2cRB6uVh2Xp3Z3xauSZQY",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 673.1428833007812,
      "y": 368.4285888671875,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "width": 232,
      "height": 56.57147216796875,
      "seed": 2014942171,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1684262428433,
      "link": null,
      "locked": false
    },
    {
      "type": "rectangle",
      "version": 42,
      "versionNonce": 1776592981,
      "isDeleted": false,
      "id": "6HWITrH4roXg5bkuyYzLb",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 672,
      "y": 197.5714569091797,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "width": 80.571533203125,
      "height": 21.714279174804688,
      "seed": 1755325019,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1684262438744,
      "link": null,
      "locked": false
    },
    {
      "type": "rectangle",
      "version": 43,
      "versionNonce": 1982552725,
      "isDeleted": false,
      "id": "gZgHo85pPQm6VTuqXY7cm",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 608,
      "y": 224.42860412597656,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "width": 79.4285888671875,
      "height": 22.857131958007812,
      "seed": 876008885,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1684262443996,
      "link": null,
      "locked": false
    },
    {
      "type": "rectangle",
      "version": 45,
      "versionNonce": 1141013045,
      "isDeleted": false,
      "id": "VA-00Mrb2aZFM_EBeM1O6",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 806.857177734375,
      "y": 267.2857360839844,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "width": 83.42864990234375,
      "height": 32.000030517578125,
      "seed": 1634549749,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "boundElements": [],
      "updated": 1684262448477,
      "link": null,
      "locked": false
    },
    {
      "type": "text",
      "version": 545,
      "versionNonce": 1568560501,
      "isDeleted": false,
      "id": "mOsEkleZFVu-CmCgHfySn",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 419.57159423828125,
      "y": 441.5714111328125,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "width": 485.17962646484375,
      "height": 275,
      "seed": 1528246517,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1684263013152,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": " USERS\n1. name: string,  required, unique\n2. email: string, required, unique. validates\n3. password: string, required, trim, validates\n4. gender: string, enum[\"hombre\", \"mujer\"], required\n5. rol: string, enum[\"admin\", \"user\"], required\n6. image: string\n7. confirmationCode: string, required\n8. check: boolean, default: false\n9. events: [objectId --> populate ]\n10. scores: [objectId --> populate ]",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": " USERS\n1. name: string,  required, unique\n2. email: string, required, unique. validates\n3. password: string, required, trim, validates\n4. gender: string, enum[\"hombre\", \"mujer\"], required\n5. rol: string, enum[\"admin\", \"user\"], required\n6. image: string\n7. confirmationCode: string, required\n8. check: boolean, default: false\n9. events: [objectId --> populate ]\n10. scores: [objectId --> populate ]",
      "lineHeight": 1.25,
      "baseline": 267
    },
    {
      "type": "text",
      "version": 253,
      "versionNonce": 1963479739,
      "isDeleted": false,
      "id": "MwCb78D-pbkiwtMBGOJhq",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 425.42852783203125,
      "y": 764.285758972168,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "width": 344.77972412109375,
      "height": 225,
      "seed": 5458101,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1684263135212,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "EVENTS\n1. name: string,  required\n2. location: string, required \n3. data: Date, required\n4. hour: string, required \n5. description: string, required\n6. users: [objectId --> populate ]\n7. scores: [objectId --> populate ]\n",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "EVENTS\n1. name: string,  required\n2. location: string, required \n3. data: Date, required\n4. hour: string, required \n5. description: string, required\n6. users: [objectId --> populate ]\n7. scores: [objectId --> populate ]\n",
      "lineHeight": 1.25,
      "baseline": 217
    },
    {
      "type": "text",
      "version": 149,
      "versionNonce": 1917951189,
      "isDeleted": false,
      "id": "iMUn0f0_q9lA6HcRtaP8S",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "angle": 0,
      "x": 429.7142333984375,
      "y": 993.2856369018555,
      "strokeColor": "#087f5b",
      "backgroundColor": "transparent",
      "width": 427.0596923828125,
      "height": 100,
      "seed": 1415082965,
      "groupIds": [],
      "roundness": null,
      "boundElements": [],
      "updated": 1684263258227,
      "link": null,
      "locked": false,
      "fontSize": 20,
      "fontFamily": 1,
      "text": "SCORES\n1.event: {objectId --> populate } \n2. user: {objectId --> populate }\n3. points: {number, min: 0 max 30 required}",
      "textAlign": "left",
      "verticalAlign": "top",
      "containerId": null,
      "originalText": "SCORES\n1.event: {objectId --> populate } \n2. user: {objectId --> populate }\n3. points: {number, min: 0 max 30 required}",
      "lineHeight": 1.25,
      "baseline": 92
    },
    {
      "id": "O07j2W5L2V_Kv60jRVqt7",
      "type": "text",
      "x": 449.142822265625,
      "y": 1191.9044723510742,
      "width": 687.4397583007812,
      "height": 1600,
      "angle": 0,
      "strokeColor": "#364fc7",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": null,
      "seed": 542923309,
      "version": 2688,
      "versionNonce": 376541347,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1684345064360,
      "link": null,
      "locked": false,
      "text": "CONTROLLER USERS\n\n1.- REGISTRO: \n    - tenemos que enviar un correo para que verifiquemos el \n      correo\n    - verificar el usuario no exista en la base de datos\n    - Si no nos manda una imagen le ponemos una de serie\n    - tenemos que guardar el codigo en el back\n    - BYCRIP para encriptar la contraseña\n\n2.- VERIFICAR CODIGO\n    - Es verificar que el codigo se correcto \n    - en caso de ser correcto va a poner la propiedad check a true\n    - si el codigo no es correcto hacemos un delete del usuario \n\n3.- RESEND DE CODIGO\n\n4.- LOGIN\n    -Nos da un token que lo envia para que en el front lo guardemos \n    en las cookie, sessionStorage\n    -BYCRIP  para la comparar las contraseñas \n\n5.- fORGOT PASSWORD --antes del login\n    - Nos tiene que poner su correo electronico\n    - buscas que ese correo existe en los usuarios\n    -si existe le envio una nueva contraseña\n    - si no existe, en el formulario que mete su email le pongo que ese email no existe\n\n6.- CHANGE PASSWORD -- esto logado\n    -le pedimos al usuario que meta la contraseña antigua y una nueva\n    - si todo coincide, metemos la nuevac contraseña encriptada en el DB\n\n7.- UPDATE\n\n9.- REMOVE\n\n10.- ADD TO EVENT\n    - Aqui vamos a meter el id del usuario en el arrray de usuarios de eventos\n        y por otra lado hay que modificar el user y meter el id del evento\n    - Tiene que recibir el id del usuario y el id del evento\n\n11.- LOGOUT \n\n12. GETBYID\n\n13.- GETALL\n\n CONTROLLER EVENTS\n\n1.-CREATE\n\n2.-UPDATE\n\n3.- DELETE\n    - Cuando borramos un evento hay que borrar o modificar los otros modelos:\n        1) Los user con este evento, se tiene que borrarv su id del array de events\n        2) Hay que borrar todos los score de ese evento y su vez borrar los id de \n            el array de score del user\n4. GETBYID\n\n5.- GETALL\n\nCONTROLLER SCORES\n\n1.- CREAR SCORE\n    - Solo podré crear el score cuando el usuario este adherido al event\n\n2.- DELETE \n    -Tenemos que borrar el id del score que borremos tanto de user como events\n\n3.-UPDATE\n\n4.-GETALL\n\n5.-GETBYID\n\n\n\n\n",
      "fontSize": 16,
      "fontFamily": 1,
      "textAlign": "left",
      "verticalAlign": "top",
      "baseline": 1594,
      "containerId": null,
      "originalText": "CONTROLLER USERS\n\n1.- REGISTRO: \n    - tenemos que enviar un correo para que verifiquemos el \n      correo\n    - verificar el usuario no exista en la base de datos\n    - Si no nos manda una imagen le ponemos una de serie\n    - tenemos que guardar el codigo en el back\n    - BYCRIP para encriptar la contraseña\n\n2.- VERIFICAR CODIGO\n    - Es verificar que el codigo se correcto \n    - en caso de ser correcto va a poner la propiedad check a true\n    - si el codigo no es correcto hacemos un delete del usuario \n\n3.- RESEND DE CODIGO\n\n4.- LOGIN\n    -Nos da un token que lo envia para que en el front lo guardemos \n    en las cookie, sessionStorage\n    -BYCRIP  para la comparar las contraseñas \n\n5.- fORGOT PASSWORD --antes del login\n    - Nos tiene que poner su correo electronico\n    - buscas que ese correo existe en los usuarios\n    -si existe le envio una nueva contraseña\n    - si no existe, en el formulario que mete su email le pongo que ese email no existe\n\n6.- CHANGE PASSWORD -- esto logado\n    -le pedimos al usuario que meta la contraseña antigua y una nueva\n    - si todo coincide, metemos la nuevac contraseña encriptada en el DB\n\n7.- UPDATE\n\n9.- REMOVE\n\n10.- ADD TO EVENT\n    - Aqui vamos a meter el id del usuario en el arrray de usuarios de eventos\n        y por otra lado hay que modificar el user y meter el id del evento\n    - Tiene que recibir el id del usuario y el id del evento\n\n11.- LOGOUT \n\n12. GETBYID\n\n13.- GETALL\n\n CONTROLLER EVENTS\n\n1.-CREATE\n\n2.-UPDATE\n\n3.- DELETE\n    - Cuando borramos un evento hay que borrar o modificar los otros modelos:\n        1) Los user con este evento, se tiene que borrarv su id del array de events\n        2) Hay que borrar todos los score de ese evento y su vez borrar los id de \n            el array de score del user\n4. GETBYID\n\n5.- GETALL\n\nCONTROLLER SCORES\n\n1.- CREAR SCORE\n    - Solo podré crear el score cuando el usuario este adherido al event\n\n2.- DELETE \n    -Tenemos que borrar el id del score que borremos tanto de user como events\n\n3.-UPDATE\n\n4.-GETALL\n\n5.-GETBYID\n\n\n\n\n",
      "lineHeight": 1.25
    },
    {
      "id": "2hdOWCCl8HnfTVjDMstFz",
      "type": "rectangle",
      "x": 442.28582763671875,
      "y": 2425.903694152832,
      "width": 710.8572387695312,
      "height": 32,
      "angle": 0,
      "strokeColor": "#a61e4d",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1873248013,
      "version": 129,
      "versionNonce": 71735053,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1684345083073,
      "link": null,
      "locked": false
    },
    {
      "id": "ahhx6bSS88M0IVJuMzjNa",
      "type": "rectangle",
      "x": 441.714599609375,
      "y": 1187.6177291870117,
      "width": 648.571533203125,
      "height": 28.5714111328125,
      "angle": 0,
      "strokeColor": "#a61e4d",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 960195555,
      "version": 106,
      "versionNonce": 1379331075,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1684345095833,
      "link": null,
      "locked": false
    },
    {
      "id": "GPsQ4kN-kybNmhj0oJMxH",
      "type": "rectangle",
      "x": 443.42889404296875,
      "y": 2126.570083618164,
      "width": 723.4286499023438,
      "height": 28.57147216796875,
      "angle": 0,
      "strokeColor": "#a61e4d",
      "backgroundColor": "transparent",
      "fillStyle": "hachure",
      "strokeWidth": 1,
      "strokeStyle": "solid",
      "roughness": 1,
      "opacity": 100,
      "groupIds": [],
      "roundness": {
        "type": 3
      },
      "seed": 1696625571,
      "version": 131,
      "versionNonce": 1671327555,
      "isDeleted": false,
      "boundElements": null,
      "updated": 1684345134551,
      "link": null,
      "locked": false
    }
  ],
  "appState": {
    "gridSize": null,
    "viewBackgroundColor": "#ffffff"
  },
  "files": {}
}